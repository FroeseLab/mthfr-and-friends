rule all:
    input:
        expand(
            "data/output/saint_output_merged_{condition}.csv",
            condition=["main", "MTHFR38to656"],
        ),


rule prepare_saint:
    conda:
        "../environment.yml"
    input:
        data_raw_scaffold="data/raw/Prepare_SAINT_list_input_file/Proteins Report of merged human files with all 4 conditions (1. Feb, 5. Feb, 18. Feb).txt",
        data_rename="data/metadata/SAINT_rename_file.csv",
        renv="restored.Rprofile",
    output:
        data_saint="data/interim/SAINT_list_input.csv",
        data_saint_MTHFR38to65="interim/SAINT_list_input_MTHFR38to656_control.csv",
        crapome="data/interim/crapome_input.csv",
    script:
        "scripts/Script_SAINT_list_input_v1.R"


rule run_saint:
    message:
        """
        Data from SAINT analysis using "data/interim/SAINT_list_input.csv" as input, where empty vector is control
        SAINT analysis performed with https://reprint-apms.org/?q=analysis_front_apms online server 
        Import raw .tsv file of the "raw SAINT results".
        When downloaded a .output file is given.
        Just add .tsv file format

        Bait-prey output was exported from the unfiltered matrix
        from "Bait-prey heatmap" tab. Downloaded as a .tab file.
        Just add .tsv file format
        """
    input:
        data_saint="data/interim/SAINT_list_input.csv",
        saint_output="resources/precomputed/21262.output.tsv",
        bait_prey_output="resources/precomputed/21262_baitPrey_data.tab.tsv",
    output:
        saint_output="data/interim/saint_output_main.csv",
        bait_prey_output="data/interim/saint_baitprey_main.tab.tsv",
    shell:
        """
        cp {input.saint_output} {output.saint_output}
        cp {input.bait_prey_output} {output.bait_prey_output}
        """


rule run_saint_38656:
    message:
        """
        Data from SAINT analysis using "data/interim/SAINT_list_input_MTHFR38to656_control.csv" as input, where empty vector is control
        SAINT analysis performed with https://reprint-apms.org/?q=analysis_front_apms online server 
        Import raw .tsv file of the "raw SAINT results".
        When downloaded a .output file is given.
        Just add .tsv file format

        Bait-prey output was exported from the unfiltered matrix
        from "Bait-prey heatmap" tab. Downloaded as a .tab file.
        Just add .tsv file format
        """
    input:
        data_saint="data/interim/SAINT_list_input_MTHFR38to656_control.csv",
        saint_output="resources/precomputed/21302.output.tsv",
        bait_prey_output="resources/precomputed/21302_baitPrey_data.tab.tsv",
    output:
        saint_output="data/interim/saint_output_MTHFR38to656.csv",
        bait_prey_output="data/interim/saint_baitprey_MTHFR38to656.tab.tsv",
    shell:
        """
        cp {input.saint_output} {output.saint_output}
        cp {input.bait_prey_output} {output.bait_prey_output}
        """


rule query_crapome:
    message:
        """
        Generated from entering the Prey accession IDs in file "data/interim/crapome_input.csv" 
        Insert into "Workflow 1: Query proteins and retrieve profiles"at https://reprint-apms.org/?q=chooseworkflow
        Date obtained 31st of May 2024
        """
    input:
        crapome_input="data/interim/crapome_input.csv",
        crapome_output="resources/precomputed/Crapome_1716919084_gp.csv",
    output:
        crapome_output="data/interim/crapome_output.csv",
    shell:
        """
        cp {input.crapome_output} {output.crapome_output}
        """


rule query_amigo:
    message:
        """
        raw data obtained (date: 26 July 2024)
        from https://amigo.geneontology.org/amigo/term/GO:0004672
        with "Gene/product (bioentity_label)
        """
    input:
        amigo="resources/precomputed/AmiGO_{label}_{go}.csv",
    output:
        amigo="data/interim/AmiGO_{label}_{go}.csv",
    shell:
        """
        cp {input.amigo} {output.amigo}
        """


rule merge_saint_outputs:
    conda:
        "../environment.yml"
    input:
        saint_output="data/interim/saint_output_{condition}.csv",
        saint_prey_output="data/interim/saint_baitprey_{condition}.tab.tsv",
    output:
        saint_output="data/output/saint_output_merged_{condition}.csv",
    script:
        "scripts/merge_saint_outputs.R"


rule annotate_saint_outputs:
    conda:
        "../environment.yml"
    input:
        saint_merged="data/output/saint_output_merged_{condition}.csv",
        crapome="data/interim/crapome_output.csv",
        amigo_kinase="data/interim/AmiGO_kinase_GO-0004672.csv",
        amigo_kinase_activator="data/interim/AmiGO_kinaseactivator_GO-0019207.csv",
        string_db="data/interim/string_db",
    output:
        merged_saint_output="data/output/saint_output_merged_annotated_{condition}.csv",
        merged_saint_output_rds="data/output/saint_output_merged_annotated_{condition}.rds",
        plot_sp_fca="results/plot_SP_FCA_raw_{condition}.png",
    script:
        "scripts/annotate_saint_outputs.R"


rule plot_saint_outputs:
    conda:
        "../environment.yml"
    input:
        saint_annotated="data/output/saint_output_merged_annotated_{condition}.csv",
    output:
        plot_sp_fca="results/plot_SP_FCA_main_{condition}.png",
        plot_sp_fca_kinase="results/plot_SP_FCA_kinase_{condition}.png",
        plot_sp_fca_string="results/plot_SP_FCA_string_{condition}.png",
        plot_sp_fca_crapome_gradient="results/plot_SP_FCA_crapome_gradient_{condition}.png",
        plot_sp_fca_crapome="results/plot_SP_FCA_crapome_{condition}.png",
        plot_heatmap="results/plot_heatmap_{condition}.png",
    script:
        "scripts/Script_SAINT_output_analysis_v1.R"


rule string_db_cache:
    conda:
        "../environment.yml"
    output:
        string_db=directory("data/interim/string_db"),
    script:
        "scripts/string_db_cache.R"
